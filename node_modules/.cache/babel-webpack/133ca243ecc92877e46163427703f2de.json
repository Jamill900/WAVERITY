{"ast":null,"code":"import { NgModule, Injectable, defineInjectable, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject } from 'rxjs';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Main module of the library\n */\n\nimport * as ɵngcc0 from '@angular/core';\nlet NgwWowModule = /*#__PURE__*/(() => {\n  class NgwWowModule {}\n\n  NgwWowModule.ɵfac = function NgwWowModule_Factory(t) {\n    return new (t || NgwWowModule)();\n  };\n\n  NgwWowModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgwWowModule\n  });\n  NgwWowModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NgwWowModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgwWowModule, {\n    imports: function () {\n      return [CommonModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Configuration for the NgwWowService service.\n */\n\n\nclass NgwWowConfig {\n  constructor() {\n    /**\n     * Class name that reveals the hidden box when user scrolls.\n     */\n    this.boxClass = 'wow';\n    /**\n     * Class name that triggers the CSS animations ('animated' by default for the animate.css library)\n     */\n\n    this.animateClass = 'animated';\n    /**\n     * Define the distance between the bottom of browser viewport and the top of hidden box.\n     * When the user scrolls and reach this distance the hidden box is revealed.\n     */\n\n    this.offset = 0;\n    /**\n     * Turn on/off WOW.js on mobile devices.\n     */\n\n    this.mobile = true;\n    /**\n     * Consatantly check for new WOW elements on the page.\n     */\n\n    this.live = true;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Service to interact with the window object.\n */\n\n\nclass WindowService {\n  /**\n   * @return {?}\n   */\n  get nativeWindow() {\n    return _window();\n  }\n\n}\n\nWindowService.ɵfac = function WindowService_Factory(t) {\n  return new (t || WindowService)();\n};\n\nWindowService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: WindowService,\n  factory: WindowService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nWindowService.ngInjectableDef = defineInjectable({\n  factory: function WindowService_Factory() {\n    return new WindowService();\n  },\n  token: WindowService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @return {?}\n */\n\n\nfunction _window() {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass NgwWowService {\n  /**\n   * @param {?} windowService\n   */\n  constructor(windowService) {\n    // Observable  source\n    this.itemRevealedSource = new Subject(); // Observable  stream\n\n    this.itemRevealed$ = this.itemRevealedSource.asObservable();\n    this.window = windowService.nativeWindow;\n  }\n  /**\n   * @param {?=} config\n   * @return {?}\n   */\n\n\n  init(config) {\n    if (this.window) {\n      // For Angular Universal suport\n      const\n      /** @type {?} */\n      wowConfig = config || {}; // Set callback hook:\n\n      wowConfig.callback = () => this.itemRevealedSource.next(); // Initializes the library\n\n\n      new WOW(wowConfig).init();\n    }\n  }\n\n}\n\nNgwWowService.ɵfac = function NgwWowService_Factory(t) {\n  return new (t || NgwWowService)(ɵngcc0.ɵɵinject(WindowService));\n};\n\nNgwWowService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NgwWowService,\n  factory: NgwWowService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\n/** @nocollapse */\nNgwWowService.ngInjectableDef = defineInjectable({\n  factory: function NgwWowService_Factory() {\n    return new NgwWowService(inject(WindowService));\n  },\n  token: NgwWowService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { NgwWowModule, NgwWowConfig, WindowService, NgwWowService }; //# sourceMappingURL=ngx-wow.js.map","map":null,"metadata":{},"sourceType":"module"}