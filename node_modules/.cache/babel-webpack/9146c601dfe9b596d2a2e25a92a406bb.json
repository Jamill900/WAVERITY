{"ast":null,"code":"/**\n * @license ngx-tabset\n * MIT license\n */\nimport { Component, ContentChild, ContentChildren, EventEmitter, Input, NgModule, Output, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TabComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementContainer(1, 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template);\n  }\n}\n\nfunction TabComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TabComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, TabComponent_div_0_div_1_Template, 2, 1, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(2, TabComponent_div_0_div_2_Template, 2, 0, \"div\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.customPaneClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.bypassDOM);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.bypassDOM);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction TabsetComponent_li_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tab_r1.tabSubTitle);\n  }\n}\n\nfunction TabsetComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const tab_r1 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.selectTab(tab_r1);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, TabsetComponent_li_1_span_3_Template, 2, 1, \"span\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", tab_r1.active)(\"disabled\", tab_r1.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(tab_r1.tabTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !!tab_r1.tabSubTitle);\n  }\n}\n\nlet TabComponent = /*#__PURE__*/(() => {\n  class TabComponent {\n    constructor() {\n      this.active = false;\n      this.disabled = false;\n      this.bypassDOM = false;\n      this.customPaneClass = '';\n    }\n\n  }\n\n  TabComponent.ɵfac = function TabComponent_Factory(t) {\n    return new (t || TabComponent)();\n  };\n\n  TabComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TabComponent,\n    selectors: [[\"ngx-tab\"]],\n    contentQueries: function TabComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      active: \"active\",\n      disabled: \"disabled\",\n      bypassDOM: \"bypassDOM\",\n      customPaneClass: \"customPaneClass\",\n      tabTitle: \"tabTitle\",\n      tabSubTitle: \"tabSubTitle\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"pane\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"pane\", 3, \"ngClass\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function TabComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TabComponent_div_0_Template, 3, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.active);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return TabComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nlet TabsetComponent = /*#__PURE__*/(() => {\n  class TabsetComponent {\n    constructor() {\n      this.disableStyle = false;\n      this.customNavClass = '';\n      this.customTabsClass = '';\n      this.onSelect = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterContentInit() {\n      // get all active tabs\n      const\n      /** @type {?} */\n      activeTabs = this.tabs.filter(tab => tab.active); // if there is no active tab set, activate the first\n\n      if (activeTabs.length === 0) {\n        this.selectTab(this.tabs.first);\n      }\n    }\n    /**\n     * @param {?} tabToSelect\n     * @return {?}\n     */\n\n\n    selectTab(tabToSelect) {\n      if (tabToSelect.disabled === true || tabToSelect.active === true) {\n        return;\n      } // deactivate all tabs\n\n\n      this.tabs.toArray().forEach(tab => tab.active = false); // activate the tab the user has clicked on.\n\n      tabToSelect.active = true;\n      this.onSelect.emit(this.tabs.toArray().indexOf(tabToSelect));\n    }\n\n  }\n\n  TabsetComponent.ɵfac = function TabsetComponent_Factory(t) {\n    return new (t || TabsetComponent)();\n  };\n\n  TabsetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TabsetComponent,\n    selectors: [[\"ngx-tabset\"]],\n    contentQueries: function TabsetComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TabComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);\n      }\n    },\n    inputs: {\n      disableStyle: \"disableStyle\",\n      customNavClass: \"customNavClass\",\n      customTabsClass: \"customTabsClass\"\n    },\n    outputs: {\n      onSelect: \"onSelect\"\n    },\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 5,\n    consts: [[1, \"nav-tabset\", 3, \"ngClass\"], [\"class\", \"nav-tab\", 3, \"active\", \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"tabs-container\", 3, \"ngClass\"], [1, \"nav-tab\", 3, \"click\"], [\"class\", \"tab-subtitle\", 4, \"ngIf\"], [1, \"tab-subtitle\"]],\n    template: function TabsetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, TabsetComponent_li_1_Template, 4, 6, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"disable-style\", ctx.disableStyle);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.customNavClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.customTabsClass);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return TabsetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nlet TabsModule = /*#__PURE__*/(() => {\n  class TabsModule {\n    /**\n     * Use in AppModule: new instance of NgxTabset.\n     * @return {?}\n     */\n    static forRoot() {\n      return {\n        ngModule: TabsModule,\n        providers: []\n      };\n    }\n    /**\n     * Use in features modules with lazy loading: new instance of NgxTabset.\n     * @return {?}\n     */\n\n\n    static forChild() {\n      return {\n        ngModule: TabsModule,\n        providers: []\n      };\n    }\n\n  }\n\n  TabsModule.ɵfac = function TabsModule_Factory(t) {\n    return new (t || TabsModule)();\n  };\n\n  TabsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TabsModule\n  });\n  TabsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  /** @nocollapse */\n\n  return TabsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabsModule, {\n    declarations: function () {\n      return [TabComponent, TabsetComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [TabComponent, TabsetComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Public classes.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TabsetComponent, TabComponent, TabsModule }; //# sourceMappingURL=ngx-tabset.js.map","map":null,"metadata":{},"sourceType":"module"}