{"ast":null,"code":"(() => {\n  \"use strict\";\n\n  var t = {\n    792: (t, e, i) => {\n      i.d(e, {\n        Z: () => n\n      });\n      var s = i(609),\n          o = i.n(s)()(function (t) {\n        return t[1];\n      });\n      o.push([t.id, ':host{--divider-width: 1px;--divider-color: #fff;--divider-shadow: none;--default-handle-width: 50px;--default-handle-color: #fff;--default-handle-opacity: 1;--default-handle-shadow: none;--handle-position-start: 50%;position:relative;display:inline-block;overflow:hidden;line-height:0;direction:ltr}@media screen and (-webkit-min-device-pixel-ratio: 0)and (min-resolution: 0.001dpcm){:host{outline-offset:1px}}::slotted(*){-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none;user-drag:none;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.first{position:absolute;left:0;top:0;right:0;line-height:normal;font-size:100%;max-height:100%;height:100%;width:100%;--exposure: 50%;--keyboard-transition-time: 0ms;--default-transition-time: 0ms;--transition-time: var(--default-transition-time)}.first .first-overlay-container{position:relative;clip-path:inset(0 var(--exposure) 0 0);transition:clip-path var(--transition-time);height:100%}.first .first-overlay{overflow:hidden;height:100%}.first.focused{will-change:clip-path}.first.focused .first-overlay-container{will-change:clip-path}.second{position:relative}.handle-container{transform:translateX(50%);position:absolute;top:0;right:var(--exposure);height:100%;transition:right var(--transition-time),bottom var(--transition-time)}.focused .handle-container{will-change:right}.divider{position:absolute;height:100%;width:100%;left:0;top:0;display:flex;align-items:center;justify-content:center;flex-direction:column}.divider:after{content:\" \";display:block;height:100%;border-left-width:var(--divider-width);border-left-style:solid;border-left-color:var(--divider-color);box-shadow:var(--divider-shadow)}.handle{position:absolute;top:var(--handle-position-start);pointer-events:none;box-sizing:border-box;margin-left:1px;transform:translate(calc(-50% - 0.5px), -50%);line-height:0}.default-handle{width:var(--default-handle-width);opacity:var(--default-handle-opacity);transition:all 1s;filter:drop-shadow(var(--default-handle-shadow))}.default-handle path{stroke:var(--default-handle-color)}.vertical .first-overlay-container{clip-path:inset(0 0 var(--exposure) 0)}.vertical .handle-container{transform:translateY(50%);height:auto;top:unset;bottom:var(--exposure);width:100%;left:0;flex-direction:row}.vertical .divider:after{height:1px;width:100%;border-top-width:var(--divider-width);border-top-style:solid;border-top-color:var(--divider-color);border-left:0}.vertical .handle{top:auto;left:var(--handle-position-start);transform:translate(calc(-50% - 0.5px), -50%) rotate(90deg)}', \"\"]);\n      const n = o;\n    },\n    609: t => {\n      t.exports = function (t) {\n        var e = [];\n        return e.toString = function () {\n          return this.map(function (e) {\n            var i = t(e);\n            return e[2] ? \"@media \".concat(e[2], \" {\").concat(i, \"}\") : i;\n          }).join(\"\");\n        }, e.i = function (t, i, s) {\n          \"string\" == typeof t && (t = [[null, t, \"\"]]);\n          var o = {};\n          if (s) for (var n = 0; n < this.length; n++) {\n            var r = this[n][0];\n            null != r && (o[r] = !0);\n          }\n\n          for (var a = 0; a < t.length; a++) {\n            var d = [].concat(t[a]);\n            s && o[d[0]] || (i && (d[2] ? d[2] = \"\".concat(i, \" and \").concat(d[2]) : d[2] = i), e.push(d));\n          }\n        }, e;\n      };\n    }\n  },\n      e = {};\n\n  function i(s) {\n    var o = e[s];\n    if (void 0 !== o) return o.exports;\n    var n = e[s] = {\n      id: s,\n      exports: {}\n    };\n    return t[s](n, n.exports, i), n.exports;\n  }\n\n  i.n = t => {\n    var e = t && t.__esModule ? () => t.default : () => t;\n    return i.d(e, {\n      a: e\n    }), e;\n  }, i.d = (t, e) => {\n    for (var s in e) i.o(e, s) && !i.o(t, s) && Object.defineProperty(t, s, {\n      enumerable: !0,\n      get: e[s]\n    });\n  }, i.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), (() => {\n    var t = i(792);\n\n    const e = \"rendered\",\n          s = (t, e) => {\n      const i = t.getBoundingClientRect();\n      let s, o;\n      return \"mousedown\" === e.type ? (s = e.clientX, o = e.clientY) : (s = e.touches[0].clientX, o = e.touches[0].clientY), s >= i.x && s <= i.x + i.width && o >= i.y && o <= i.y + i.height;\n    },\n          o = document.createElement(\"template\");\n\n    o.innerHTML = '<div class=\"second\" id=\"second\"> <slot name=\"second\"><slot name=\"before\"></slot></slot> </div> <div class=\"first\" id=\"first\"> <div class=\"first-overlay\"> <div class=\"first-overlay-container\" id=\"firstImageContainer\"> <slot name=\"first\"><slot name=\"after\"></slot></slot> </div> </div> <div class=\"handle-container\"> <div class=\"divider\"></div> <div class=\"handle\" id=\"handle\"> <slot name=\"handle\"> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"default-handle\" viewBox=\"-8 -3 16 6\"> <path d=\"M -5 -2 L -7 0 L -5 2 M 5 -2 L 7 0 L 5 2\" fill=\"none\" vector-effect=\"non-scaling-stroke\"/> </svg> </slot> </div> </div> </div> ';\n\n    const n = {\n      ArrowLeft: -1,\n      ArrowRight: 1\n    },\n          r = [\"horizontal\", \"vertical\"],\n          a = t => ({\n      x: t.touches[0].pageX,\n      y: t.touches[0].pageY\n    }),\n          d = t => ({\n      x: t.pageX,\n      y: t.pageY\n    });\n\n    class h extends HTMLElement {\n      constructor() {\n        super(), this.exposure = this.hasAttribute(\"value\") ? parseFloat(this.getAttribute(\"value\")) : 50, this.slideOnHover = !1, this.slideDirection = \"horizontal\", this.keyboard = \"enabled\", this.isMouseDown = !1, this.animationDirection = 0, this.isFocused = !1, this.handle = !1, this.onMouseMove = t => {\n          if (this.isMouseDown || this.slideOnHover) {\n            const e = d(t);\n            this.slideToPage(e);\n          }\n        }, this.bodyUserSelectStyle = \"\", this.onMouseDown = t => {\n          if (this.slideOnHover) return;\n          if (this.handle && !s(this.handleElement, t)) return;\n          t.preventDefault(), window.addEventListener(\"mousemove\", this.onMouseMove), window.addEventListener(\"mouseup\", this.onWindowMouseUp), this.isMouseDown = !0, this.enableTransition();\n          const e = d(t);\n          this.slideToPage(e), this.focus(), this.bodyUserSelectStyle = window.document.body.style.userSelect, window.document.body.style.userSelect = \"none\";\n        }, this.onWindowMouseUp = () => {\n          this.isMouseDown = !1, window.document.body.style.userSelect = this.bodyUserSelectStyle, window.removeEventListener(\"mousemove\", this.onMouseMove), window.removeEventListener(\"mouseup\", this.onWindowMouseUp);\n        }, this.touchStartPoint = null, this.isTouchComparing = !1, this.hasTouchMoved = !1, this.onTouchStart = t => {\n          this.handle && !s(this.handleElement, t) || (this.touchStartPoint = a(t), this.isFocused && (this.enableTransition(), this.slideToPage(this.touchStartPoint)));\n        }, this.onTouchMove = t => {\n          if (null === this.touchStartPoint) return;\n          const e = a(t);\n          if (this.isTouchComparing) return this.slideToPage(e), t.preventDefault(), !1;\n\n          if (!this.hasTouchMoved) {\n            const i = Math.abs(e.y - this.touchStartPoint.y),\n                  s = Math.abs(e.x - this.touchStartPoint.x);\n            if (\"horizontal\" === this.slideDirection && i < s || \"vertical\" === this.slideDirection && i > s) return this.isTouchComparing = !0, this.focus(), this.slideToPage(e), t.preventDefault(), !1;\n            this.hasTouchMoved = !0;\n          }\n        }, this.onTouchEnd = () => {\n          this.isTouchComparing = !1, this.hasTouchMoved = !1, this.touchStartPoint = null;\n        }, this.onBlur = () => {\n          this.stopSlideAnimation(), this.isFocused = !1, this.firstElement.classList.remove(\"focused\");\n        }, this.onFocus = () => {\n          this.isFocused = !0, this.firstElement.classList.add(\"focused\");\n        }, this.onKeyDown = t => {\n          if (\"disabled\" === this.keyboard) return;\n          const e = n[t.key];\n          this.animationDirection !== e && void 0 !== e && (this.animationDirection = e, this.startSlideAnimation());\n        }, this.onKeyUp = t => {\n          if (\"disabled\" === this.keyboard) return;\n          const e = n[t.key];\n          void 0 !== e && this.animationDirection === e && this.stopSlideAnimation();\n        }, this.resetDimensions = () => {\n          this.imageWidth = this.offsetWidth, this.imageHeight = this.offsetHeight;\n        };\n        const e = this.attachShadow({\n          mode: \"open\"\n        }),\n              i = document.createElement(\"style\");\n        i.innerHTML = t.Z, this.getAttribute(\"nonce\") && i.setAttribute(\"nonce\", this.getAttribute(\"nonce\")), e.appendChild(i), e.appendChild(o.content.cloneNode(!0)), this.firstElement = e.getElementById(\"first\"), this.secondElement = e.getElementById(\"second\"), this.handleElement = e.getElementById(\"handle\");\n      }\n\n      get value() {\n        return this.exposure;\n      }\n\n      set value(t) {\n        const e = parseFloat(t);\n        e !== this.exposure && (this.exposure = e, this.enableTransition(), this.setExposure());\n      }\n\n      get hover() {\n        return this.slideOnHover;\n      }\n\n      set hover(t) {\n        this.slideOnHover = \"false\" !== t.toString().toLowerCase(), this.removeEventListener(\"mousemove\", this.onMouseMove), this.slideOnHover && this.addEventListener(\"mousemove\", this.onMouseMove);\n      }\n\n      get direction() {\n        return this.slideDirection;\n      }\n\n      set direction(t) {\n        this.slideDirection = t.toString().toLowerCase(), this.slide(0), this.firstElement.classList.remove(...r), r.includes(this.slideDirection) && this.firstElement.classList.add(this.slideDirection);\n      }\n\n      static get observedAttributes() {\n        return [\"hover\", \"direction\"];\n      }\n\n      connectedCallback() {\n        this.hasAttribute(\"tabindex\") || (this.tabIndex = 0), this.addEventListener(\"dragstart\", t => (t.preventDefault(), !1)), new ResizeObserver(this.resetDimensions).observe(this), this.setExposure(0), this.keyboard = this.hasAttribute(\"keyboard\") && \"disabled\" === this.getAttribute(\"keyboard\") ? \"disabled\" : \"enabled\", this.addEventListener(\"keydown\", this.onKeyDown), this.addEventListener(\"keyup\", this.onKeyUp), this.addEventListener(\"focus\", this.onFocus), this.addEventListener(\"blur\", this.onBlur), this.addEventListener(\"touchstart\", this.onTouchStart, {\n          passive: !0\n        }), this.addEventListener(\"touchmove\", this.onTouchMove, {\n          passive: !1\n        }), this.addEventListener(\"touchend\", this.onTouchEnd), this.addEventListener(\"mousedown\", this.onMouseDown), this.handle = this.hasAttribute(\"handle\"), this.hover = !!this.hasAttribute(\"hover\") && this.getAttribute(\"hover\"), this.direction = this.hasAttribute(\"direction\") ? this.getAttribute(\"direction\") : \"horizontal\", this.resetDimensions(), this.classList.contains(e) || this.classList.add(e), this.querySelectorAll('[slot=\"before\"], [slot=\"after\"]').length > 0 && console.warn('<img-comparison-slider>: slot names \"before\" and \"after\" are deprecated and soon won\\'t be supported. Please use slot=\"first\" instead of slot=\"after\", and slot=\"second\" instead of slot=\"before\".');\n      }\n\n      disconnectedCallback() {\n        this.transitionTimer && window.clearTimeout(this.transitionTimer);\n      }\n\n      attributeChangedCallback(t, e, i) {\n        \"hover\" === t && (this.hover = i), \"direction\" === t && (this.direction = i), \"keyboard\" === t && (this.keyboard = \"disabled\" === i ? \"disabled\" : \"enabled\");\n      }\n\n      setExposure(t = 0) {\n        var e;\n        this.exposure = (100, (e = this.exposure + t) < 0 ? 0 : e > 100 ? 100 : e), this.firstElement.style.setProperty(\"--exposure\", 100 - this.exposure + \"%\");\n      }\n\n      slide(t = 0) {\n        this.setExposure(t);\n        const e = new Event(\"slide\");\n        this.dispatchEvent(e);\n      }\n\n      slideToPage(t) {\n        \"horizontal\" === this.slideDirection && this.slideToPageX(t.x), \"vertical\" === this.slideDirection && this.slideToPageY(t.y);\n      }\n\n      slideToPageX(t) {\n        const e = t - this.getBoundingClientRect().left - window.scrollX;\n        this.exposure = e / this.imageWidth * 100, this.slide(0);\n      }\n\n      slideToPageY(t) {\n        const e = t - this.getBoundingClientRect().top - window.scrollY;\n        this.exposure = e / this.imageHeight * 100, this.slide(0);\n      }\n\n      enableTransition() {\n        this.firstElement.style.setProperty(\"--transition-time\", \"100ms\"), this.transitionTimer = window.setTimeout(() => {\n          this.firstElement.style.setProperty(\"--transition-time\", \"var(--default-transition-time)\"), this.transitionTimer = null;\n        }, 100);\n      }\n\n      startSlideAnimation() {\n        let t = null,\n            e = this.animationDirection;\n        this.firstElement.style.setProperty(\"--transition-time\", \"var(--keyboard-transition-time)\");\n\n        const i = s => {\n          if (0 === this.animationDirection || e !== this.animationDirection) return;\n          null === t && (t = s);\n          const o = (s - t) / 16.666666666666668 * this.animationDirection;\n          this.slide(o), setTimeout(() => window.requestAnimationFrame(i), 0), t = s;\n        };\n\n        window.requestAnimationFrame(i);\n      }\n\n      stopSlideAnimation() {\n        this.animationDirection = 0, this.firstElement.style.setProperty(\"--transition-time\", \"var(--default-transition-time)\");\n      }\n\n    }\n\n    \"undefined\" != typeof window && window.customElements.define(\"img-comparison-slider\", h);\n  })();\n})(); //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}